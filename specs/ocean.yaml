collections:
  all:
    - mk001
    - mk002
    - mk003
  long:
    - mk003
slices:
  mk001:
    readymade_namd:
      current: +slices/mk001
  mk002:
    readymade_namd:
      current: +slices/mk001
  mk003:
    readymade_namd:
      current: +slices/mk003
calculations:
  protein_abstractor:
    uptype: simulation
    slice_name: current
    group: all
    collections: all
  lipid_abstractor:
    uptype: simulation
    slice_name: current
    group: all
    collections: all
    specs:
      selector:
        loop:
          lipid_com:
            resnames: +selectors/resnames_lipid
            type: com
      separator: 
        lipid_tip: "name P"
        monolayer_cutoff: 1.4
  undulations:
    uptype: post
    group: all
    slice_name: current
    collections: all
    specs:
      grid_spacing: 
        loop:
          - 0.5
          - 0.25
      upstream: lipid_abstractor
variables:
  selectors:
    protein_selection: (name BB or name SC1 or name SC2 or name SC3 or name SC4 or name SC5)
    resnames_lipid: ['DOPC','DOPS','PIP2','POPC']
  colordict:
    mk001: orange
    mk002: blue
    mk003: green
  slices:
    mk001:
        psf: "1protein_again_autopsf.psf"
        dcds: ['test0000.dcd','test0001.dcd','test0002.dcd','test0003.dcd','test0004.dcd']
    mk002:
        psf: "1protein_again_autopsf-v2.psf"
        dcds: ['test0000-v2.dcd','test0001-v2.dcd','test0002-v2.dcd','test0003-v2.dcd','test0004-v2.dcd']
    mk003:
        psf: "1protein_again_autopsf-v2.psf"
        dcds: ['repetitive.dcd']
meta:
  short_namer: "lambda s : ('v'+re.match('^simulation-v(\\d+)',s).group(1) if re.match('^simulation-v(\\d+)',s) else s)"
  mk001: 
    label: "v1"
    nprots: 1
  mk002: 
    label: "v2"
    nprots: 1
  mk003: 
    label: "v3"
    nprots: 1
plots:
  undulations:
    calculation: undulations
    slices: current
    collections: all
  protein_abstractor:
    calculation: protein_abstractor
    slices: current_protein
    collections: all

